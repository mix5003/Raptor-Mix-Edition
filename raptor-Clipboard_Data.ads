-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
with MSSyst.Guid;
limited with MSSyst.String;
limited with MSSyst.Type_k;
with raptor.Clipboard_Data.kinds;
limited with raptor.CommentBox;
limited with raptor.Component;
limited with raptor.logging_info;
package raptor.Clipboard_Data is
   type Typ is new MSSyst.Object.Typ   with record
      kind : raptor.Clipboard_Data.kinds.Valuetype;
      pragma Import(MSIL,kind,"kind");
      symbols : access raptor.Component.Typ'Class;
      pragma Import(MSIL,symbols,"symbols");
      cb : access raptor.CommentBox.Typ'Class;
      pragma Import(MSIL,cb,"cb");
      guid : MSSyst.Guid.Valuetype;
      pragma Import(MSIL,guid,"guid");
      log : access raptor.logging_info.Typ'Class;
      pragma Import(MSIL,log,"log");
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_Clipboard_Data(
      This : Ref := null;
      c : access raptor.Component.Typ'Class;
      g : MSSyst.Guid.Valuetype;
      l : access raptor.logging_info.Typ'Class) return Ref;
   function new_Clipboard_Data(
      This : Ref := null;
      b : access raptor.CommentBox.Typ'Class;
      g : MSSyst.Guid.Valuetype) return Ref;
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Clipboard_Data);
end raptor.Clipboard_Data;
pragma Import(MSIL,raptor.Clipboard_Data,
   ".ver 4:0:5:2",
   "[raptor]raptor.Clipboard_Data");
