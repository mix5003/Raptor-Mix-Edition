-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.String;

package GeneratorAda.Imperative_Interface is
   type Typ is interface;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   procedure Declare_Procedure(
      This : access Typ;
      name : access MSSyst.String.Typ'Class;
      args : access MSSyst.String.Ref_arr;
      arg_is_input : MSIL_Types.Bool_Arr;
      arg_is_output : MSIL_Types.Bool_Arr) is abstract;
   procedure Done_Method(
      This : access Typ) is abstract;
private
   pragma Import(MSIL,Declare_Procedure,"Declare_Procedure");
   pragma Import(MSIL,Done_Method,"Done_Method");
end GeneratorAda.Imperative_Interface;
pragma Import(MSIL,GeneratorAda.Imperative_Interface,
   ".ver 1:0:0:0",
   "[GeneratorAda]GeneratorAda.Imperative_Interface");
