-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with MSSyst.Drawing.Graphics;
limited with MSSyst.Drawing.Rectangle;
with MSSyst.Runtime.Serialization.ISerializable;
limited with MSSyst.Runtime.Serialization.SerializationInfo;
limited with MSSyst.Runtime.Serialization.StreamingContext;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with generate_interface.typ;
limited with raptor.CommentBox;
with raptor.Component;
with raptor.Oval;
limited with raptor.Visual_Flow_Form;
package raptor.Oval_Return is
   type Typ is new raptor.Oval.Typ
         and MSSyst.Runtime.Serialization.ISerializable.Typ
   with record
      null;
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_Oval_Return(
      This : Ref := null;
      height : Integer;
      width : Integer;
      str_name : access MSSyst.String.Typ'Class) return Ref;
   function new_Oval_Return(
      This : Ref := null;
      Successor : access raptor.Component.Typ'Class;
      height : Integer;
      width : Integer;
      str_name : access MSSyst.String.Typ'Class) return Ref;
   function new_Oval_Return(
      This : Ref := null;
      info : access MSSyst.Runtime.Serialization.SerializationInfo.Typ'Class;
      ctxt : MSSyst.Runtime.Serialization.StreamingContext.Valuetype) return Ref;
   procedure draw(
      This : access Typ;
      gr : access MSSyst.Drawing.Graphics.Typ'Class;
      x : Integer;
      y : Integer);
   function editable_selected(
      This : access Typ) return Standard.Boolean;
   procedure Emit_Code(
      This : access Typ;
      gen : access generate_interface.typ.Typ'Class);
   function getDrawText(
      This : access Typ) return access MSSyst.String.Typ'Class;
   procedure GetObjectData(
      This : access Typ;
      info : access MSSyst.Runtime.Serialization.SerializationInfo.Typ'Class;
      ctxt : MSSyst.Runtime.Serialization.StreamingContext.Valuetype);
   function has_code(
      This : access Typ) return Standard.Boolean;
   procedure mark_error(
      This : access Typ);
   procedure selectAll(
      This : access Typ);
   function SelectRegion(
      This : access Typ;
      rec : MSSyst.Drawing.Rectangle.Valuetype) return Standard.Boolean;
   function setText(
      This : access Typ;
      x : Integer;
      y : Integer;
      form : access raptor.Visual_Flow_Form.Typ'Class) return Standard.Boolean;
   procedure wide_footprint(
      This : access Typ;
      gr : access MSSyst.Drawing.Graphics.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Oval_Return);
   pragma Import(MSIL,draw,"draw");
   pragma Import(MSIL,editable_selected,"editable_selected");
   pragma Import(MSIL,Emit_Code,"Emit_Code");
   pragma Import(MSIL,getDrawText,"getDrawText");
   pragma Import(MSIL,GetObjectData,"GetObjectData");
   pragma Import(MSIL,has_code,"has_code");
   pragma Import(MSIL,mark_error,"mark_error");
   pragma Import(MSIL,selectAll,"selectAll");
   pragma Import(MSIL,SelectRegion,"SelectRegion");
   pragma Import(MSIL,setText,"setText");
   pragma Import(MSIL,wide_footprint,"wide_footprint");
end raptor.Oval_Return;
pragma Import(MSIL,raptor.Oval_Return,
   ".ver 4:0:5:2",
   "[raptor]raptor.Oval_Return");
