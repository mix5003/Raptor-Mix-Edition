-- Autogenerated by MSIL2Ada v. 2
-- By: Martin C. Carlisle
--     Department of Computer Science
--     US Air Force Academy
--     carlislem@acm.org
with MSSyst.Object;
with MSIL_Types;
use MSIL_Types;
limited with Microsoft.Ink.InkOverlay;
limited with MSSyst.ComponentModel.CancelEventHandler;
with MSSyst.ComponentModel.Component;
with MSSyst.ComponentModel.IComponent;
limited with MSSyst.ComponentModel.IContainer;
limited with MSSyst.ComponentModel.ISite;
with MSSyst.ComponentModel.ISynchronizeInvoke;
limited with MSSyst.Delegate;
limited with MSSyst.Drawing.Bitmap;
limited with MSSyst.Drawing.Color;
limited with MSSyst.Drawing.Font;
limited with MSSyst.Drawing.Graphics;
limited with MSSyst.Drawing.Image;
with MSSyst.Drawing.Point;
with MSSyst.Drawing.Rectangle;
limited with MSSyst.Drawing.Region;
limited with MSSyst.Drawing.SizeF;
limited with MSSyst.Drawing.Size;
limited with MSSyst.EventArgs;
limited with MSSyst.EventHandler;
limited with MSSyst.IAsyncResult;
with MSSyst.IDisposable;
with MSSyst.MarshalByRefObject;
limited with MSSyst.Runtime.Remoting.ObjRef;
limited with MSSyst.String;
limited with MSSyst.Type_k;
limited with MSSyst.Windows.Forms.AccessibleObject;
limited with MSSyst.Windows.Forms.AccessibleRole;
limited with MSSyst.Windows.Forms.AnchorStyles;
limited with MSSyst.Windows.Forms.AutoSizeMode;
limited with MSSyst.Windows.Forms.BindingContext;
limited with MSSyst.Windows.Forms.BorderStyle;
limited with MSSyst.Windows.Forms.BoundsSpecified;
limited with MSSyst.Windows.Forms.ContextMenuStrip;
limited with MSSyst.Windows.Forms.ContextMenu;
with MSSyst.Windows.Forms.Control;
limited with MSSyst.Windows.Forms.Control.ControlCollection;
limited with MSSyst.Windows.Forms.ControlBindingsCollection;
limited with MSSyst.Windows.Forms.ControlEventHandler;
limited with MSSyst.Windows.Forms.Cursor;
limited with MSSyst.Windows.Forms.DockStyle;
limited with MSSyst.Windows.Forms.DragDropEffects;
limited with MSSyst.Windows.Forms.DragEventHandler;
limited with MSSyst.Windows.Forms.Form;
limited with MSSyst.Windows.Forms.GetChildAtPointSkip;
limited with MSSyst.Windows.Forms.GiveFeedbackEventHandler;
limited with MSSyst.Windows.Forms.HScrollProperties;
limited with MSSyst.Windows.Forms.HelpEventHandler;
with MSSyst.Windows.Forms.IBindableComponent;
limited with MSSyst.Windows.Forms.IContainerControl;
with MSSyst.Windows.Forms.IDropTarget;
with MSSyst.Windows.Forms.IWin32Window;
limited with MSSyst.Windows.Forms.IWindowTarget;
limited with MSSyst.Windows.Forms.ImageLayout;
limited with MSSyst.Windows.Forms.ImeMode;
limited with MSSyst.Windows.Forms.InvalidateEventHandler;
limited with MSSyst.Windows.Forms.KeyEventHandler;
limited with MSSyst.Windows.Forms.KeyPressEventHandler;
limited with MSSyst.Windows.Forms.Layout.LayoutEngine;
limited with MSSyst.Windows.Forms.LayoutEventHandler;
with MSSyst.Windows.Forms.Message;
limited with MSSyst.Windows.Forms.MouseEventHandler;
limited with MSSyst.Windows.Forms.Padding;
limited with MSSyst.Windows.Forms.PaintEventHandler;
with MSSyst.Windows.Forms.Panel;
limited with MSSyst.Windows.Forms.PreProcessControlState;
limited with MSSyst.Windows.Forms.PreviewKeyDownEventHandler;
limited with MSSyst.Windows.Forms.QueryAccessibilityHelpEventHandler;
limited with MSSyst.Windows.Forms.QueryContinueDragEventHandler;
limited with MSSyst.Windows.Forms.RightToLeft;
limited with MSSyst.Windows.Forms.ScrollEventHandler;
with MSSyst.Windows.Forms.ScrollableControl;
limited with MSSyst.Windows.Forms.ScrollableControl.DockPaddingEdges;
with MSSyst.Windows.Forms.TabPage;
limited with MSSyst.Windows.Forms.UICuesEventHandler;
limited with MSSyst.Windows.Forms.VScrollProperties;
limited with raptor.Buffered;
limited with raptor.CommentBox;
limited with raptor.Component;
limited with raptor.Oval;
limited with raptor.Subchart_Kinds;
limited with raptor.Visual_Flow_Form;
package raptor.Subchart is
   type Typ is new MSSyst.Windows.Forms.TabPage.Typ
         and MSSyst.ComponentModel.IComponent.Typ
         and MSSyst.IDisposable.Typ
         and MSSyst.Windows.Forms.IDropTarget.Typ
         and MSSyst.ComponentModel.ISynchronizeInvoke.Typ
         and MSSyst.Windows.Forms.IWin32Window.Typ
         and MSSyst.Windows.Forms.IBindableComponent.Typ
   with record
      panel1 : access MSSyst.Windows.Forms.Panel.Typ'Class;
      pragma Import(MSIL,panel1,"panel1");
      flow_panel : access raptor.Buffered.Typ'Class;
      pragma Import(MSIL,flow_panel,"flow_panel");
      Start : access raptor.Oval.Typ'Class;
      pragma Import(MSIL,Start,"Start");
      End_k : access raptor.Oval.Typ'Class;
      pragma Import(MSIL,End_k,"End");
      am_compiling : Standard.Boolean;
      pragma Import(MSIL,am_compiling,"am_compiling");
      selection_rectangle : MSSyst.Drawing.Rectangle.Valuetype;
      pragma Import(MSIL,selection_rectangle,"selection_rectangle");
      scroll_location : MSSyst.Drawing.Point.Valuetype;
      pragma Import(MSIL,scroll_location,"scroll_location");
      region_selected : Standard.Boolean;
      pragma Import(MSIL,region_selected,"region_selected");
      tab_overlay : access Microsoft.Ink.InkOverlay.Typ'Class;
      pragma Import(MSIL,tab_overlay,"tab_overlay");
      Breakpoint_Selection : access raptor.Component.Typ'Class;
      pragma Import(MSIL,Breakpoint_Selection,"Breakpoint_Selection");
      selectedComment : access raptor.CommentBox.Typ'Class;
      pragma Import(MSIL,selectedComment,"selectedComment");
      ink_resolution : Long_Float;
      pragma Import(MSIL,ink_resolution,"ink_resolution");
   end record;
   type Ref is access all Typ'Class;
   type Ref_addrof is access all Ref;
   type Ref_Arr is array(Natural range <>) of Ref;
   type Ref_Array is access all Ref_Arr;
   type Ref_Array_addrof is access all Ref_Array;
   function new_Subchart(
      This : Ref := null;
      the_form : access raptor.Visual_Flow_Form.Typ'Class;
      s : access MSSyst.String.Typ'Class) return Ref;
   procedure Activated(
      This : access Typ;
      sender : access MSSyst.Object.Typ'Class;
      e : access MSSyst.EventArgs.Typ'Class);
   procedure flow_panel_MouseEnter(
      This : access Typ;
      sender : access MSSyst.Object.Typ'Class;
      e : access MSSyst.EventArgs.Typ'Class);
   function get_Am_Dragging(
      This : access Typ) return Standard.Boolean;
   function get_Current_Selection(
      This : access Typ) return access raptor.Component.Typ'Class;
   function get_num_params(
      This : access Typ) return Integer;
   function get_Subchart_Kind(
      This : access Typ) return raptor.Subchart_Kinds.Valuetype;
   function getFullName(
      This : access Typ) return access MSSyst.String.Typ'Class;
   function Is_Subchart_Name(
      s : access MSSyst.String.Typ'Class) return Standard.Boolean;
   function Parameter_Count(
      s : access MSSyst.String.Typ'Class) return Integer;
   procedure scale_ink(
      This : access Typ;
      scale : Float);
   procedure set_Current_Selection(
      This : access Typ;
      value : access raptor.Component.Typ'Class);
   procedure tab_disposed(
      This : access Typ;
      o : access MSSyst.Object.Typ'Class;
      e : access MSSyst.EventArgs.Typ'Class);
private
   pragma Convention(MSIL,Typ);
   pragma MSIL_Constructor(new_Subchart);
   pragma Import(MSIL,Activated,"Activated");
   pragma Import(MSIL,flow_panel_MouseEnter,"flow_panel_MouseEnter");
   pragma Import(MSIL,get_Am_Dragging,"get_Am_Dragging");
   pragma Import(MSIL,get_Current_Selection,"get_Current_Selection");
   pragma Import(MSIL,get_num_params,"get_num_params");
   pragma Import(MSIL,get_Subchart_Kind,"get_Subchart_Kind");
   pragma Import(MSIL,getFullName,"getFullName");
   pragma Import(MSIL,Is_Subchart_Name,"Is_Subchart_Name");
   pragma Import(MSIL,Parameter_Count,"Parameter_Count");
   pragma Import(MSIL,scale_ink,"scale_ink");
   pragma Import(MSIL,set_Current_Selection,"set_Current_Selection");
   pragma Import(MSIL,tab_disposed,"tab_disposed");
end raptor.Subchart;
pragma Import(MSIL,raptor.Subchart,
   ".ver 4:0:5:2",
   "[raptor]raptor.Subchart");
